import{z as s}from"zod";import i from"nodemailer";import{H3Event as o,readBody as c,eventHandler as m}from"h3";import{getContext as u}from"unctx";import{AsyncLocalStorage as l}from"node:async_hooks";const f=s.object({name:s.string().min(1,{message:"Required"}),emailAddress:s.string().email({message:"Invalid email address"}),message:s.string().min(1,{message:"Required"})});function p(){return h()}const a=Symbol("$HTTPEvent");function d(t){return typeof t=="object"&&(t instanceof o||t?.[a]instanceof o||t?.__is_event__===!0)}function y(t){return function(...n){let e=n[0];if(d(e))n[0]=e instanceof o||e.__is_event__?e:e[a];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(e=p(),!e)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");n.unshift(e)}return t(...n)}}const g=y(c);function v(){return u("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:l})}function h(){return v().use().event}const E=i.createTransport({host:"smtp.gmail.com",port:587,secure:!1,auth:{user:"tommoore.dev@gmail.com",pass:process.env.GMAIL_APP_PASSWORD}});async function w(t,n,e){const r={from:n,to:"tommoore.dev@gmail.com",subject:"New Contact Form Submission",text:`Name: ${t}
Email: ${n}
Message: ${e}`};try{return await E.sendMail(r)}catch{throw new Error("Failed to send email")}}const P=m(async t=>{const n=await g(t),e=f.safeParse(JSON.parse(n));return e.success?(await w(e.data.name,e.data.emailAddress,e.data.message)).accepted?new Response("Email sent successfully",{status:200}):new Response("Email failed to send",{status:500}):new Response(JSON.stringify({error:e.error.message}),{status:400})});export{P as default};
